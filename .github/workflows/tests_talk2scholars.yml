name: TESTS Talk2Scholars

on:
  pull_request:
    branches: [main]
    paths:
      - "aiagents4pharma/talk2scholars/**"
  workflow_dispatch:

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  ZOTERO_API_KEY: ${{ secrets.ZOTERO_API_KEY }}
  ZOTERO_USER_ID: ${{ secrets.ZOTERO_USER_ID }}

jobs:
  # pylint job for ubuntu
  pylint-ubuntu:
    name: pylint-ubuntu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Miniforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-version: "latest"
          python-version: 3.12

      - name: Cache conda environment
        id: cache-conda
        uses: actions/cache@v3
        with:
          path: ${{ env.CONDA }}/envs/talk2scholars-env
          key: Linux-conda-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            Linux-conda-

      - name: Create conda environment
        if: steps.cache-conda.outputs.cache-hit != 'true'
        shell: bash -l {0}
        run: |
          conda update -n base -c defaults conda -y
          conda create -n talk2scholars-env -y python=3.12 pip pylint -c conda-forge
          conda activate talk2scholars-env
          pip install -r requirements.txt

      - name: Run pylint
        shell: bash -l {0}
        run: |
          conda activate talk2scholars-env
          pylint --disable=R0801,R0902,W0221,W0122 aiagents4pharma/talk2scholars

  # pylint job for macos
  pylint-macos:
    name: pylint-macos
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Miniforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-version: "latest"
          python-version: 3.12

      - name: Cache conda environment
        id: cache-conda
        uses: actions/cache@v3
        with:
          path: ${{ env.CONDA }}/envs/talk2scholars-env
          key: macOS-conda-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            macOS-conda-

      - name: Create conda environment
        if: steps.cache-conda.outputs.cache-hit != 'true'
        shell: bash -l {0}
        run: |
          conda update -n base -c defaults conda -y
          conda create -n talk2scholars-env -y python=3.12 pip pylint -c conda-forge
          conda activate talk2scholars-env
          pip install -r requirements.txt

      - name: Run pylint
        shell: bash -l {0}
        run: |
          conda activate talk2scholars-env
          pylint --disable=R0801,R0902,W0221,W0122 aiagents4pharma/talk2scholars

  # pylint job for windows
  pylint-windows:
    name: pylint-windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Miniforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-version: "latest"
          python-version: 3.12

      - name: Cache conda environment
        id: cache-conda
        uses: actions/cache@v3
        with:
          path: ${{ env.CONDA }}/envs/talk2scholars-env
          key: Windows-conda-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            Windows-conda-

      - name: Create conda environment
        if: steps.cache-conda.outputs.cache-hit != 'true'
        shell: bash -l {0}
        run: |
          conda update -n base -c defaults conda -y
          conda create -n talk2scholars-env -y python=3.12 pip pylint -c conda-forge
          conda activate talk2scholars-env
          pip install -r requirements.txt

      - name: Run pylint
        shell: bash -l {0}
        run: |
          conda activate talk2scholars-env
          pylint --disable=R0801,R0902,W0221,W0122 aiagents4pharma/talk2scholars

  # code coverage job for ubuntu
  code-cov-ubuntu:
    name: code-coverage-ubuntu
    needs: pylint-ubuntu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Miniforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-version: "latest"
          python-version: 3.12

      - name: Restore conda environment cache
        id: cache-conda
        uses: actions/cache@v3
        with:
          path: ${{ env.CONDA }}/envs/talk2scholars-env
          key: Linux-conda-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            Linux-conda-

      - name: Install test dependencies
        shell: bash -l {0}
        run: |
          if [ ! -d "$CONDA/envs/talk2scholars-env" ]; then
            conda update -n base -c defaults conda -y
            conda create -n talk2scholars-env -y python=3.12 pip -c conda-forge
            conda activate talk2scholars-env
            pip install -r requirements.txt
          fi
          conda activate talk2scholars-env
          conda install -n talk2scholars-env -y pytest coverage faiss-cpu -c conda-forge

      - name: Run tests with coverage
        shell: bash -l {0}
        run: |
          conda activate talk2scholars-env
          coverage run --include=aiagents4pharma/talk2scholars/* -m pytest --cache-clear aiagents4pharma/talk2scholars/tests/

      - name: Check coverage
        shell: bash -l {0}
        run: |
          conda activate talk2scholars-env
          coverage report -m
          TOTAL_COVERAGE=$(coverage report -m | awk 'END {print int($NF)}')
          if [[ $TOTAL_COVERAGE -ne 100 ]]; then
            echo "Code coverage is not 100%. Please check the coverage report."
            exit 1
          fi
        env:
          COVERAGE_FILE: "./.coverage"

      # Using upload-artifact@v4 to avoid the error
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-ubuntu
          path: .coverage

  # code coverage job for macos
  code-cov-macos:
    name: code-coverage-macos
    needs: pylint-macos
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Miniforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-version: "latest"
          python-version: 3.12

      - name: Restore conda environment cache
        id: cache-conda
        uses: actions/cache@v3
        with:
          path: ${{ env.CONDA }}/envs/talk2scholars-env
          key: macOS-conda-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            macOS-conda-

      - name: Install test dependencies
        shell: bash -l {0}
        run: |
          if [ ! -d "$CONDA/envs/talk2scholars-env" ]; then
            conda update -n base -c defaults conda -y
            conda create -n talk2scholars-env -y python=3.12 pip -c conda-forge
            conda activate talk2scholars-env
            pip install -r requirements.txt
          fi
          conda activate talk2scholars-env
          conda install -n talk2scholars-env -y pytest coverage faiss-cpu -c conda-forge

      - name: Run tests with coverage
        shell: bash -l {0}
        run: |
          conda activate talk2scholars-env
          coverage run --include=aiagents4pharma/talk2scholars/* -m pytest --cache-clear aiagents4pharma/talk2scholars/tests/

      - name: Check coverage
        shell: bash -l {0}
        run: |
          conda activate talk2scholars-env
          coverage report -m
          TOTAL_COVERAGE=$(coverage report -m | awk 'END {print int($NF)}')
          if [[ $TOTAL_COVERAGE -ne 100 ]]; then
            echo "Code coverage is not 100%. Please check the coverage report."
            exit 1
          fi
        env:
          COVERAGE_FILE: "./.coverage"

      # Using upload-artifact@v4 to avoid the error
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-macos
          path: .coverage

  # code coverage job for windows
  code-cov-windows:
    name: code-coverage-windows
    needs: pylint-windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Miniforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-version: "latest"
          python-version: 3.12

      - name: Restore conda environment cache
        id: cache-conda
        uses: actions/cache@v3
        with:
          path: ${{ env.CONDA }}/envs/talk2scholars-env
          key: Windows-conda-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            Windows-conda-

      - name: Install test dependencies
        shell: bash -l {0}
        run: |
          if [ ! -d "$CONDA/envs/talk2scholars-env" ]; then
            conda update -n base -c defaults conda -y
            conda create -n talk2scholars-env -y python=3.12 pip -c conda-forge
            conda activate talk2scholars-env
            pip install -r requirements.txt
          fi
          conda activate talk2scholars-env
          conda install -n talk2scholars-env -y pytest coverage faiss-cpu -c conda-forge

      - name: Run tests with coverage
        shell: bash -l {0}
        run: |
          conda run -n talk2scholars-env coverage run --include=aiagents4pharma/talk2scholars/* -m pytest --cache-clear aiagents4pharma/talk2scholars/tests/

      - name: Check coverage
        shell: bash -l {0}
        run: |
          conda run -n talk2scholars-env coverage report -m --fail-under=100

      # Using upload-artifact@v4 to avoid the error
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-windows
          path: .coverage
