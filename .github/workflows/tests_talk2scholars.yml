# This is a basic workflow to help you get started with GitHub Actions
name: TESTS Talk2Scholars

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events
  pull_request:
    branches: [ main ]
    paths:
      - 'aiagents4pharma/talk2scholars/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  ZOTERO_API_KEY: ${{ secrets.ZOTERO_API_KEY }}
  ZOTERO_USER_ID: ${{ secrets.ZOTERO_USER_ID }}

# This workflow contains jobs covering linting and code coverage (along with testing).
jobs:
  pylint-windows-ubuntu-macos:
    # The type of runner that the job will run on
    name: pylint-windows-ubuntu-macos
    runs-on: ${{ matrix.os }}

    strategy:
        matrix:
            os: [windows-latest, ubuntu-latest, macos-13]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      # install requirements
      - name: Install the requirements
        run: |
          pip3 install --break-system-packages -r requirements.txt

      # pylint
      - name: Run pylint
        run: |
          pylint --disable=R0801,R0902,W0221,W0122 aiagents4pharma/talk2scholars

  # code coverage job for ubuntu and macos
  code-cov-ubuntu-macos:
    name: code-coverage
    runs-on: ${{ matrix.os }}

    strategy:
        matrix:
          os: [ubuntu-latest, macos-13]
    steps:
    - uses: actions/checkout@v3

    - uses: conda-incubator/setup-miniconda@v2
      with:
        miniforge-version: 'latest'
        python-version: 3.12

    - name: Install dependencies
      shell: bash -l {0}
      run: |
        conda update -n base -c defaults conda -y
        conda create -n test-env -y python=3.12 faiss-cpu pytest coverage pip -c conda-forge
        conda activate test-env
        pip install -r requirements.txt

    - name: Run tests with coverage
      shell: bash -l {0}
      run: |
        conda activate test-env
        coverage run --include=aiagents4pharma/talk2scholars/* -m pytest --cache-clear aiagents4pharma/talk2scholars/tests/

    - name: Check coverage
      shell: bash -l {0}
      run: |
        conda activate test-env
        coverage report -m
        TOTAL_COVERAGE=$(coverage report -m | awk 'END {print int($NF)}')
        if [[ $TOTAL_COVERAGE -ne 100 ]]; then
          echo "Code coverage is not 100%. Please check the coverage report."
          exit 1
        fi
      env:
        COVERAGE_FILE: './.coverage'

  # code coverage job for windows
  code-cov-windows:
    name: code-coverage-windows
    runs-on: ${{ matrix.os }}

    strategy:
        matrix:
          os: [windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Miniforge
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniforge-version: 'latest'
        python-version: 3.12

    - name: Install dependencies
      run: |
        conda update -n base -c defaults conda -y
        conda create -n test-env -y python=3.12 faiss-cpu pytest coverage pip -c conda-forge
        conda activate test-env
        pip install -r requirements.txt

    - name: Run tests with coverage
      shell: bash -l {0}
      run: |
        conda run -n test-env coverage run --include=aiagents4pharma/talk2scholars/* -m pytest --cache-clear aiagents4pharma/talk2scholars/tests/

    - name: Check coverage
      shell: bash -l {0}
      run: |
        conda run -n test-env coverage report -m --fail-under=100
