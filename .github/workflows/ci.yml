name: Docker Build and Push

on:
  # Trigger after RELEASE workflow completes successfully
  workflow_run:
    workflows: ["RELEASE"]
    types:
      - completed
    branches:
      - main
  # Keep existing triggers for testing in feature branches
  push:
    branches:
      - main
      - feature/**
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  # Detect which modules have changed
  changes:
    runs-on: ubuntu-latest
    outputs:
      talk2biomodels: ${{ steps.filter.outputs.talk2biomodels }}
      talk2scholars: ${{ steps.filter.outputs.talk2scholars }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            talk2biomodels:
              - 'aiagents4pharma/talk2biomodels/**'
            talk2scholars:
              - 'aiagents4pharma/talk2scholars/**'

  # Build and push talk2biomodels
  build-talk2biomodels:
    needs: [changes]
    if: ${{ needs.changes.outputs.talk2biomodels == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate Version
        id: version
        run: |
          # Try to get the latest tag
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")

          # If no tag found, use a dev version with commit hash
          if [ -z "$LATEST_TAG" ]; then
            SHORT_SHA=$(git rev-parse --short HEAD)
            VERSION="dev-${SHORT_SHA}"
          else
            VERSION="${LATEST_TAG}"
            
            # For feature branches, append commit hash
            if [[ "$GITHUB_REF" == refs/heads/feature/* ]]; then
              SHORT_SHA=$(git rev-parse --short HEAD)
              VERSION="${VERSION}-dev.${SHORT_SHA}"
            fi
          fi

          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Using version: $VERSION"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: aiagents4pharma/talk2biomodels/Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          load: ${{ github.ref != 'refs/heads/main' }}
          tags: |
            virtualpatientengine/talk2biomodels:${{ env.VERSION }}

      # For feature branches, just build but don't push
      - name: Test Docker image locally
        if: ${{ github.ref != 'refs/heads/main' }}
        run: |
          echo "Successfully built docker image virtualpatientengine/talk2biomodels:${{ env.VERSION }}"
          docker image ls

  # Build and push talk2scholars
  build-talk2scholars:
    needs: [changes]
    if: ${{ needs.changes.outputs.talk2scholars == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate Version
        id: version
        run: |
          # Try to get the latest tag
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")

          # If no tag found, use a dev version with commit hash
          if [ -z "$LATEST_TAG" ]; then
            SHORT_SHA=$(git rev-parse --short HEAD)
            VERSION="dev-${SHORT_SHA}"
          else
            VERSION="${LATEST_TAG}"
            
            # For feature branches, append commit hash
            if [[ "$GITHUB_REF" == refs/heads/feature/* ]]; then
              SHORT_SHA=$(git rev-parse --short HEAD)
              VERSION="${VERSION}-dev.${SHORT_SHA}"
            fi
          fi

          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Using version: $VERSION"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: aiagents4pharma/talk2scholars/Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          load: ${{ github.ref != 'refs/heads/main' }}
          tags: |
            virtualpatientengine/talk2scholars:${{ env.VERSION }}

      # For feature branches, just build but don't push
      - name: Test Docker image locally
        if: ${{ github.ref != 'refs/heads/main' }}
        run: |
          echo "Successfully built docker image virtualpatientengine/talk2scholars:${{ env.VERSION }}"
          docker image ls

  # Add latest tag after all builds succeed on main branch
  add-latest-tags:
    needs: [build-talk2biomodels, build-talk2scholars]
    if: ${{ github.ref == 'refs/heads/main' && always() && contains(needs.*.result, 'success') }}
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Tag talk2biomodels as latest
        if: ${{ needs.build-talk2biomodels.result == 'success' }}
        run: |
          # Get the latest tag from previous job
          LATEST_TAG=$(git describe --tags --abbrev=0)
          docker pull virtualpatientengine/talk2biomodels:${LATEST_TAG}
          docker tag virtualpatientengine/talk2biomodels:${LATEST_TAG} virtualpatientengine/talk2biomodels:latest
          docker push virtualpatientengine/talk2biomodels:latest

      - name: Tag talk2scholars as latest
        if: ${{ needs.build-talk2scholars.result == 'success' }}
        run: |
          # Get the latest tag from previous job
          LATEST_TAG=$(git describe --tags --abbrev=0)
          docker pull virtualpatientengine/talk2scholars:${LATEST_TAG}
          docker tag virtualpatientengine/talk2scholars:${LATEST_TAG} virtualpatientengine/talk2scholars:latest
          docker push virtualpatientengine/talk2scholars:latest
