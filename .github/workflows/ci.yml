name: Docker Build and Push

on:
  # Trigger after RELEASE workflow completes successfully
  workflow_run:
    workflows: ["RELEASE"]
    types:
      - completed
    branches:
      - main
  # Keep existing triggers for testing in feature branches
  push:
    branches:
      - main
      - feature/**
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  # Detect which modules have changed
  changes:
    runs-on: ubuntu-latest
    outputs:
      talk2biomodels: ${{ steps.filter.outputs.talk2biomodels }}
      talk2scholars: ${{ steps.filter.outputs.talk2scholars }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            talk2biomodels:
              - 'aiagents4pharma/talk2biomodels/**'
            talk2scholars:
              - 'aiagents4pharma/talk2scholars/**'

  # Get version from tag generated by semantic-release
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Latest Tag
        id: get-version
        run: |
          # Get the latest tag from semantic-release
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")

          # For feature branches that may not have tags, create a dev version
          if [[ "$GITHUB_REF" == refs/heads/feature/* ]]; then
            BRANCH_NAME=${GITHUB_REF#refs/heads/}
            SHORT_SHA=$(git rev-parse --short HEAD)
            LATEST_TAG="${LATEST_TAG}-dev.${SHORT_SHA}"
          fi

          echo "version=${LATEST_TAG}" >> $GITHUB_OUTPUT
          echo "Using version: ${LATEST_TAG}"

  # Separate jobs for each module
  build-talk2biomodels:
    needs: [changes, version]
    if: ${{ needs.changes.outputs.talk2biomodels == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: aiagents4pharma/talk2biomodels/Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          load: ${{ github.ref != 'refs/heads/main' }}
          tags: |
            virtualpatientengine/talk2biomodels:${{ needs.version.outputs.version }}
            ${{ github.ref == 'refs/heads/main' && 'virtualpatientengine/talk2biomodels:latest' || '' }}

      # For feature branches, just build but don't push
      - name: Test Docker image locally
        if: ${{ github.ref != 'refs/heads/main' }}
        run: |
          echo "Successfully built docker image virtualpatientengine/talk2biomodels:${{ needs.version.outputs.version }}"
          docker image ls | grep talk2biomodels

  build-talk2scholars:
    needs: [changes, version]
    if: ${{ needs.changes.outputs.talk2scholars == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: aiagents4pharma/talk2scholars/Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          load: ${{ github.ref != 'refs/heads/main' }}
          tags: |
            virtualpatientengine/talk2scholars:${{ needs.version.outputs.version }}
            ${{ github.ref == 'refs/heads/main' && 'virtualpatientengine/talk2scholars:latest' || '' }}

      # For feature branches, just build but don't push
      - name: Test Docker image locally
        if: ${{ github.ref != 'refs/heads/main' }}
        run: |
          echo "Successfully built docker image virtualpatientengine/talk2scholars:${{ needs.version.outputs.version }}"
          docker image ls | grep talk2scholars
