# Modernized release workflow with uv and git tag versioning
name: RELEASE

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:  # Allow manual triggering

jobs:
  release:
    name: Release & Publish
    permissions:
      contents: write
      issues: write
      pull-requests: write
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for VCS versioning

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Set up Python
        run: uv python install 3.12

      - name: Install dependencies
        run: uv sync --frozen --extra dev

      - name: Run quality checks
        run: |
          uv run ruff check aiagents4pharma/
          uv run bandit -c pyproject.toml -r aiagents4pharma/

      - name: Get release version from tag
        run: |
          # Extract version from git tag
          RELEASE_VERSION=${GITHUB_REF#refs/tags/}
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
          echo "Release version: $RELEASE_VERSION"

      - name: Build package with uv
        run: |
          uv build

      - name: Verify package integrity
        run: |
          uv run twine check dist/*

      - name: Test package installation
        run: |
          # Test that the built package can be installed
          uv pip install --system dist/*.whl --dry-run

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          verify-metadata: true
          verbose: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          tag_name: ${{ env.RELEASE_VERSION }}
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
